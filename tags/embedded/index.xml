<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>embedded - Tag - Pascal Cotret @ ENSTA Bretagne</title>
        <link>https://pcotret.github.io/tags/embedded/</link>
        <description>embedded - Tag - Pascal Cotret @ ENSTA Bretagne</description>
        <generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Fri, 01 May 2020 00:00:00 &#43;0800</lastBuildDate><atom:link href="https://pcotret.github.io/tags/embedded/" rel="self" type="application/rss+xml" /><item>
    <title>Arduino vs. embedded C - AVR reversing</title>
    <link>https://pcotret.github.io/arduino_reverse/</link>
    <pubDate>Fri, 01 May 2020 00:00:00 &#43;0800</pubDate>
    <author>Author</author>
    <guid>https://pcotret.github.io/arduino_reverse/</guid>
    <description><![CDATA[As I was teaching some embedded C basics, I was asked what are some benefits of embedded C over the classic Arduino language for an Arduino-based board. This article tries to see what we can do by reversing a really simple program compiled with both methods for the Arduino Uno.
 Prerequisites  arduino-cli: Command Line Interface for Arduino AVR cross compiler: sudo apt install gcc-avr Optional: an Arduino simulator such as SimulIDE  Sample program We want to create the most simple program which goal is to light on the built-in LED, located at port 13 (or PORT PB5) on the Arduino Uno.]]></description>
</item></channel>
</rss>
