<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>Pascal Cotret @ ENSTA Bretagne</title>
        <link>https://pcotret.github.io/</link>
        <description>Pascal Cotret @ ENSTA Bretagne</description>
        <generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Sun, 14 Nov 2021 00:00:00 &#43;0800</lastBuildDate>
            <atom:link href="https://pcotret.github.io/index.xml" rel="self" type="application/rss+xml" />
        <item>
    <title>Unlock your Brain OSINT CTF 2021</title>
    <link>https://pcotret.github.io/unlock2021/</link>
    <pubDate>Sun, 14 Nov 2021 00:00:00 &#43;0800</pubDate>
    <author>Author</author>
    <guid>https://pcotret.github.io/unlock2021/</guid>
    <description><![CDATA[Unlock Your Brain OSINT CTF https://github.com/pcotret/ctf-writeups/tree/master/uybhys-2021 This year, it was again an OSINT related CTF made by the OSINT-FR community]]></description>
</item><item>
    <title>RCTS CERT CTF</title>
    <link>https://pcotret.github.io/rcts-cert/</link>
    <pubDate>Wed, 11 Aug 2021 00:00:00 &#43;0800</pubDate>
    <author>Author</author>
    <guid>https://pcotret.github.io/rcts-cert/</guid>
    <description><![CDATA[RCTS CERT CTF writeups: https://github.com/pcotret/ctf-writeups/tree/master/rcts-cert-2021
https://defendingthesoc.ctf.cert.rcts.pt/]]></description>
</item><item>
    <title>TryHackMe free rooms</title>
    <link>https://pcotret.github.io/tryhackme/</link>
    <pubDate>Tue, 10 Aug 2021 00:00:00 &#43;0800</pubDate>
    <author>Author</author>
    <guid>https://pcotret.github.io/tryhackme/</guid>
    <description><![CDATA[Based on https://skerritt.blog/free-rooms/. Some rooms became private in the meantime&hellip;
 Level 1 - Intro  OpenVPN https://tryhackme.com/room/openvpn Welcome https://tryhackme.com/jr/welcome Intro to Researching https://tryhackme.com/room/introtoresearch Crash Course Pentesting https://tryhackme.com/room/ccpentesting  Introductory CTFs to get your feet wet  Google Dorking https://tryhackme.com/room/googledorking OHsint https://tryhackme.com/room/ohsint Shodan.io https://tryhackme.com/room/shodan  Level 2 - Tooling  Tmux https://tryhackme.com/room/rptmux Web Scanning https://tryhackme.com/room/rpwebscanning Sublist3r https://tryhackme.com/room/rpsublist3r Metasploit https://tryhackme.com/room/rpmetasploit Hydra https://tryhackme.com/room/hydra Linux Privesc https://tryhackme.com/room/linuxprivesc Web Scanning https://tryhackme.com/room/rpwebscanning  More introductory CTFs  Vulnversity - https://tryhackme.]]></description>
</item><item>
    <title>OWASP BWA VM settings</title>
    <link>https://pcotret.github.io/owasp-bwa/</link>
    <pubDate>Sun, 17 Jan 2021 00:00:00 &#43;0800</pubDate>
    <author>Author</author>
    <guid>https://pcotret.github.io/owasp-bwa/</guid>
    <description><![CDATA[Download the OWASP BWA VM: https://www.vulnhub.com/entry/owasp-broken-web-applications-project-12,46/
Network settings VM startup Just start the VM. After a few seconds, it will display its IP address. No need to login for the moment.
Just access the IP address in your browser and you&rsquo;re ready to go!]]></description>
</item><item>
    <title>Brixel CTF</title>
    <link>https://pcotret.github.io/brixel-ctf/</link>
    <pubDate>Sun, 03 Jan 2021 00:00:00 &#43;0800</pubDate>
    <author>Author</author>
    <guid>https://pcotret.github.io/brixel-ctf/</guid>
    <description><![CDATA[Brixel CTF writeups: https://github.com/pcotret/ctf-writeups/tree/master/brixelctf-2020
It was quite nice with challenge in several categories.
https://ctf.brixel.space/]]></description>
</item><item>
    <title>Ice CTF</title>
    <link>https://pcotret.github.io/ice-ctf/</link>
    <pubDate>Fri, 01 Jan 2021 00:00:00 &#43;0800</pubDate>
    <author>Author</author>
    <guid>https://pcotret.github.io/ice-ctf/</guid>
    <description><![CDATA[IceCTF writeups: https://github.com/pcotret/ctf-writeups/tree/master/icectf-2020
https://icec.tf/]]></description>
</item><item>
    <title>Lockdown setup - Working with an IPEVO document camera</title>
    <link>https://pcotret.github.io/document-camera/</link>
    <pubDate>Mon, 02 Nov 2020 00:00:00 &#43;0800</pubDate>
    <author>Author</author>
    <guid>https://pcotret.github.io/document-camera/</guid>
    <description><![CDATA[As most of us, we&rsquo;re working from home for some time. Here is a quick start guide for the IPEVO V4K document camera.
Installation Hardware The camera itself is a plug-and-play device: it&rsquo;s recognized as a camera. Two buttons on it to enable/disable the autofocus and adjust the exposure.
Software Go to https://www.ipevo.com/software/visualizer#download
As you can see, the IPEVO visualizer is supported by several platforms:
In the following parts, we&rsquo;ll try to work with the Linux binary and the Chrome plugin]]></description>
</item><item>
    <title>Building Wireshark from source</title>
    <link>https://pcotret.github.io/wireshark_build/</link>
    <pubDate>Sun, 20 Sep 2020 00:00:00 &#43;0800</pubDate>
    <author>Author</author>
    <guid>https://pcotret.github.io/wireshark_build/</guid>
    <description><![CDATA[Prerequisites for Ubuntu 20 1 2  sudo apt install libgcrypt20-dev libglib2.0-dev libc-ares-dev libssh-dev libpcap-dev \ libsystemd-dev qtbase5-dev qttools5-dev qtmultimedia5-dev   Download and build 1 2 3 4 5 6 7  git clone https://gitlab.com/wireshark/wireshark cd wireshark mkdir build cd build cmake .. make sudo make install   ]]></description>
</item><item>
    <title>Activate Coresight components in a Yocto environment for the Zedboard</title>
    <link>https://pcotret.github.io/coresight-zedboard/</link>
    <pubDate>Mon, 29 Jun 2020 00:00:00 &#43;0800</pubDate>
    <author>Author</author>
    <guid>https://pcotret.github.io/coresight-zedboard/</guid>
    <description><![CDATA[Activate Coresight components - Software side - Method #1 Generate a core-image-minimal Just follow https://pcotret.github.io/yocto-zedboard-101/. When booting this image:
1 2 3 4 5 6 7  Poky (Yocto Project Reference Distro) 3.0.3 zedboard-zynq7 /dev/ttyPS0 zedboard-zynq7 login: root root@zedboard-zynq7:~# ls /sys/bus/ amba container event_source i2c media nvmem scsi soc usb clockevents cpu gpio iio mmc pci sdio spi virtio clocksource edac hid mdio_bus mmc_rpmb platform serio ulpi workqueue   No Coresight components ðŸ˜¢ â€‹]]></description>
</item><item>
    <title>Arduino Due vs. embedded C - ARM reversing</title>
    <link>https://pcotret.github.io/arduino_due_reverse/</link>
    <pubDate>Sun, 03 May 2020 00:00:00 &#43;0800</pubDate>
    <author>Author</author>
    <guid>https://pcotret.github.io/arduino_due_reverse/</guid>
    <description><![CDATA[arduino-cli: Command Line Interface for Arduino ARM cross compiler: sudo apt install gcc-arm-none-eabi  Sample program We want to create the most simple program which goal is to light on the built-in LED, located at port PB27 on the Arduino Due.
Arduino 1 2 3 4 5 6 7 8  void setup() { pinMode(LED_BUILTIN, OUTPUT); } void loop() { digitalWrite(LED_BUILTIN, HIGH); }   Embedded C 1 2 3 4 5 6 7  int main() { PIOB-&gt;PIO_PER = 1&lt;&lt;27; /* Enable port PB27 */ PIOB-&gt;PIO_OER = 1&lt;&lt;27; /* Configure PB27 as output */ PIOB-&gt;PIO_ODSR = 0xFFFFFFFF; /* Write 1 in all PORTB ports */ return 0; }   Codes and compilation 1 2 3 4 5 6 7 8 9  $ ls -lR .]]></description>
</item></channel>
</rss>
